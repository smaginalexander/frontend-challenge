{"version":3,"sources":["components/Header/Header.js","components/Card/Card.js","components/SavedCard/SavedCard.js","components/Main/Main.js","utils/CatApi.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","location","pathname","to","Card","React","useState","isLiked","setIsLiked","src","card","url","alt","onClick","setSavedCat","id","SavedCard","image","deleteSavedCat","Main","catCards","map","_id","savedCatCards","catApi","config","getCatList","fetch","_url","headers","then","_checkResult","getSavedCat","saveCat","catId","method","body","JSON","stringify","image_id","deleteCat","this","_headers","res","ok","json","Promise","reject","status","App","setCatCards","setSavedCatCards","useLocation","history","useHistory","useEffect","catch","err","console","log","getSavedCatList","localStorage","setItem","parse","getItem","push","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14442cd7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nfunction Header(props) {\r\n    return (\r\n        <header className=\"header\">\r\n            {/* устанавиваем классы в зависимости от роута */}\r\n            <div className={props.location.pathname === '/' ? \"cats-active cats_type_all\" : 'cats cats_type_all'}>\r\n                <Link\r\n                    to=\"/\"\r\n                    className={props.location.pathname === '/' ? \"header__link-active\" : 'header__link'}>Все котики</Link>\r\n            </div>\r\n            <div className={props.location.pathname === '/saved-cats' ? \"cats-active cats_type_saved\" : 'cats cats_type_saved'}>\r\n                <Link to=\"/saved-cats\" className={props.location.pathname === '/saved-cats' ? \"header__link-active\" : 'header__link'}>Любимые котики</Link>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n    const [isLiked, setIsLiked] = React.useState(false);\r\n\r\n    //при клике на лайк передадим id карточки в тело запроса\r\n    const likeCat = () => {\r\n        setIsLiked(true)\r\n        props.setSavedCat(props.card.id)\r\n    }\r\n    const unLikeCat = () => {\r\n        setIsLiked(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card__img\" src={props.card.url} alt=\"кот\" />\r\n            {isLiked ?\r\n                <span onClick={unLikeCat} className=\"card__like card__like_true\" /> :\r\n                <span onClick={likeCat} className=\"card__like card__like_false\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport '../Card/Card.css';\r\n\r\nfunction SavedCard(props) {\r\n    const [isLiked, setIsLiked] = React.useState(true);\r\n    //при клике на лайк передадим id карточки в тело запроса\r\n    const likeCat = () => {\r\n        setIsLiked(true)\r\n    }\r\n    const unLikeCat = () => {\r\n        setIsLiked(false)\r\n        props.deleteSavedCat(props.card.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card__img\" src={props.card.image.url} alt=\"кот\" />\r\n            {isLiked ?\r\n                <span onClick={unLikeCat} className=\"card__like card__like_true\" /> :\r\n                <span onClick={likeCat} className=\"card__like card__like_false\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedCard;","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport SavedCard from '../SavedCard/SavedCard';\r\nimport './Main.css';\r\n\r\nfunction Main(props) {\r\n    return (\r\n        <main className=\"elements\">\r\n            {/* вывод всех котов и избранных в зависимости от роута */}\r\n            {props.location.pathname === '/' ?\r\n                props.catCards.map((card) => (\r\n                    <Card\r\n                        key={card._id}\r\n                        card={card}\r\n                        setSavedCat={props.setSavedCat}\r\n                    />\r\n                )) :\r\n                props.savedCatCards.map((card) => (\r\n                    <SavedCard\r\n                        key={card._id}\r\n                        card={card}\r\n                        deleteSavedCat={props.deleteSavedCat}\r\n                    />\r\n                ))\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","export class CatApi {\r\n    constructor(config) {\r\n        this._url = config.url;\r\n        this._headers = config.headers;\r\n    }\r\n\r\n    _checkResult(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n    getCatList = () => {\r\n        return fetch(`${this._url}/images/search?limit=25`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n            }\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n    getSavedCat = () => {\r\n        return fetch(`${this._url}/favourites`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n            }\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n    saveCat = (catId) => {\r\n        return fetch(`${this._url}/favourites`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n            },\r\n            body: JSON.stringify({\r\n                image_id: catId\r\n            })\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n    deleteCat = (catId) => {\r\n        return fetch(`${this._url}/favourites/${catId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n            }\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n\r\n}\r\n\r\nconst catApi = new CatApi({\r\n    url: 'https://api.thecatapi.com/v1',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n    },\r\n})\r\n\r\nexport default catApi","import { Route, useLocation, useHistory } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Header from '../Header/Header.js';\r\nimport Main from '../Main/Main.js';\r\n// запросы к API\r\nimport catApi from '../../utils/CatApi';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  //массивы со списком всех котов и избранных\r\n  const [catCards, setCatCards] = React.useState([]);\r\n  const [savedCatCards, setSavedCatCards] = React.useState([]);\r\n\r\n  //передадим в компоненты, где будем использовать как условие \r\n  const location = useLocation();\r\n  const history = useHistory()\r\n\r\n  // при загрузке компонента получим списки котов\r\n  React.useEffect(() => {\r\n    catApi.getCatList()\r\n      .then(res => setCatCards(res))\r\n      .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    catApi.getSavedCat()\r\n      .then(res => setSavedCatCards(res))\r\n      .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  // получить всех избранных котов и сохранить на клиенте\r\n  const getSavedCatList = () => {\r\n    catApi.getSavedCat()\r\n      .then((res) => {\r\n        localStorage.setItem('savedCats', JSON.stringify(res))\r\n        setSavedCatCards(JSON.parse(localStorage.getItem('savedCats')))\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  // сохранить кота\r\n  const setSavedCat = (catId) => {\r\n    catApi.saveCat(catId)\r\n      .then(() => {\r\n        getSavedCatList()\r\n      })\r\n  }\r\n\r\n  // удалить кота\r\n  const deleteSavedCat = (catId) => {\r\n    catApi.deleteCat(catId)\r\n      .then(() => {\r\n        getSavedCatList()\r\n      })\r\n  }\r\n  console.log(location.pathname);\r\n  console.log(location.pathname === '/frontend-challenge');\r\n  React.useEffect(() => {\r\n    if (location.pathname === '/frontend-challenge') {\r\n      history.push('/');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header location={location} />\r\n      <Route exact path=\"/\">\r\n        <Main\r\n          catCards={catCards}\r\n          savedCatCards={savedCatCards}\r\n          setSavedCat={setSavedCat}\r\n          deleteSavedCat={deleteSavedCat}\r\n          location={location}\r\n        />\r\n      </Route>\r\n      <Route path=\"/saved-cats\">\r\n        <Main\r\n          catCards={catCards}\r\n          savedCatCards={savedCatCards}\r\n          setSavedCat={setSavedCat}\r\n          deleteSavedCat={deleteSavedCat}\r\n          location={location}\r\n        />\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter >\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}