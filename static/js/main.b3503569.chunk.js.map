{"version":3,"sources":["components/Header/Header.js","components/Card/Card.js","components/SavedCard/SavedCard.js","components/Main/Main.js","utils/CatApi.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","location","pathname","to","Card","React","useState","isLiked","setIsLiked","src","card","url","alt","onClick","setSavedCat","id","SavedCard","image","deleteSavedCat","Main","catCards","map","_id","savedCatCards","catApi","config","getCatList","count","fetch","_url","headers","then","_checkResult","getSavedCat","saveCat","catId","method","body","JSON","stringify","image_id","deleteCat","this","_headers","res","ok","json","Promise","reject","status","App","useLocation","setCatCards","setSavedCatCards","countPage","setCountPage","isFtching","setIsFitching","scrollHandler","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","useEffect","document","addEventListener","removeEventListener","catch","err","console","log","finally","getSavedCatList","localStorage","setItem","parse","getItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.b3503569.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nfunction Header(props) {\r\n    return (\r\n        <header className=\"header\">\r\n            {/* устанавиваем классы в зависимости от роута */}\r\n            <div className={props.location.pathname === '/' ? \"cats-active cats_type_all\" : 'cats cats_type_all'}>\r\n                <Link\r\n                    to=\"/\"\r\n                    className={props.location.pathname === '/' ? \"header__link-active\" : 'header__link'}>Все котики</Link>\r\n            </div>\r\n            <div className={props.location.pathname === '/saved-cats' ? \"cats-active cats_type_saved\" : 'cats cats_type_saved'}>\r\n                <Link to=\"/saved-cats\" className={props.location.pathname === '/saved-cats' ? \"header__link-active\" : 'header__link'}>Любимые котики</Link>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n    const [isLiked, setIsLiked] = React.useState(false);\r\n\r\n    //при клике на лайк передадим id карточки в тело запроса\r\n    const likeCat = () => {\r\n        setIsLiked(true)\r\n        props.setSavedCat(props.card.id)\r\n    }\r\n    const unLikeCat = () => {\r\n        setIsLiked(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card__img\" src={props.card.url} alt=\"кот\" />\r\n            {isLiked ?\r\n                <span onClick={unLikeCat} className=\"card__like card__like_true\" /> :\r\n                <span onClick={likeCat} className=\"card__like card__like_false\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport '../Card/Card.css';\r\n\r\nfunction SavedCard(props) {\r\n    const [isLiked, setIsLiked] = React.useState(true);\r\n    //при клике на лайк передадим id карточки в тело запроса\r\n    const likeCat = () => {\r\n        setIsLiked(true)\r\n    }\r\n    const unLikeCat = () => {\r\n        setIsLiked(false)\r\n        props.deleteSavedCat(props.card.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card__img\" src={props.card.image.url} alt=\"кот\" />\r\n            {isLiked ?\r\n                <span onClick={unLikeCat} className=\"card__like card__like_true\" /> :\r\n                <span onClick={likeCat} className=\"card__like card__like_false\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedCard;","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport SavedCard from '../SavedCard/SavedCard';\r\nimport './Main.css';\r\n\r\nfunction Main(props) {\r\n    return (\r\n        <>\r\n            <main className=\"elements\">\r\n                {/* вывод всех котов и избранных в зависимости от роута */}\r\n                {props.location.pathname === '/' ?\r\n                    props.catCards.map((card) => (\r\n                        <Card\r\n                            key={card._id}\r\n                            card={card}\r\n                            setSavedCat={props.setSavedCat}\r\n                        />\r\n                    )) :\r\n                    props.savedCatCards.map((card) => (\r\n                        <SavedCard\r\n                            key={card._id}\r\n                            card={card}\r\n                            deleteSavedCat={props.deleteSavedCat}\r\n                        />\r\n                    ))\r\n                }\r\n            </main>\r\n            {props.location.pathname === '/' && <p className=\"message\">...загружаем еще котиков...</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","export class CatApi {\r\n    constructor(config) {\r\n        this._url = config.url;\r\n        this._headers = config.headers;\r\n    }\r\n\r\n    _checkResult(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n    getCatList = (count) => {\r\n        return fetch(`${this._url}/images/search?limit=15&_page=${count}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n            }\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n    getSavedCat = () => {\r\n        return fetch(`${this._url}/favourites`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n            }\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n    saveCat = (catId) => {\r\n        return fetch(`${this._url}/favourites`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n            },\r\n            body: JSON.stringify({\r\n                image_id: catId\r\n            })\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n    deleteCat = (catId) => {\r\n        return fetch(`${this._url}/favourites/${catId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n            }\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n\r\n}\r\n\r\nconst catApi = new CatApi({\r\n    url: 'https://api.thecatapi.com/v1',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-api-key': '727b362f-5c6c-4d73-968d-40d05811e067'\r\n    },\r\n})\r\n\r\nexport default catApi","import { Route, useLocation } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Header from '../Header/Header.js';\r\nimport Main from '../Main/Main.js';\r\n// запросы к API\r\nimport catApi from '../../utils/CatApi';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  //передадим в компоненты, где будем использовать как условие \r\n  const location = useLocation();\r\n  //массивы со списком всех котов и избранных\r\n  const [catCards, setCatCards] = React.useState([]);\r\n  const [savedCatCards, setSavedCatCards] = React.useState([]);\r\n  // для бесконечного скролла\r\n  const [countPage, setCountPage] = React.useState(1)\r\n  const [isFtching, setIsFitching] = React.useState(true)\r\n\r\n  //установка значения true при нужной высоте\r\n  const scrollHandler = (e) => {\r\n    if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n      setIsFitching(true)\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener('scroll', scrollHandler)\r\n    return function () {\r\n      document.removeEventListener('scroll', scrollHandler)\r\n    }\r\n  }, []);\r\n  //когда isFtching меняется получим списки котов\r\n  React.useEffect(() => {\r\n    if (isFtching) {\r\n      catApi.getCatList(countPage)\r\n        .then((res) => {\r\n          setCatCards([...catCards, ...res])\r\n          setCountPage(count => count + 1)\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => setIsFitching(false))\r\n    }\r\n  }, [isFtching]);\r\n\r\n  React.useEffect(() => {\r\n    catApi.getSavedCat()\r\n      .then((res) => {\r\n        setSavedCatCards(res)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  // получить всех избранных котов и сохранить на клиенте\r\n  const getSavedCatList = () => {\r\n    catApi.getSavedCat()\r\n      .then((res) => {\r\n        localStorage.setItem('savedCats', JSON.stringify(res))\r\n        setSavedCatCards(JSON.parse(localStorage.getItem('savedCats')))\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  // сохранить кота\r\n  const setSavedCat = (catId) => {\r\n    catApi.saveCat(catId)\r\n      .then(() => {\r\n        getSavedCatList()\r\n      })\r\n  }\r\n\r\n  // удалить кота\r\n  const deleteSavedCat = (catId) => {\r\n    catApi.deleteCat(catId)\r\n      .then(() => {\r\n        getSavedCatList()\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header location={location} />\r\n      <Route exact path=\"/\">\r\n        <Main\r\n          catCards={catCards}\r\n          savedCatCards={savedCatCards}\r\n          setSavedCat={setSavedCat}\r\n          deleteSavedCat={deleteSavedCat}\r\n          location={location}\r\n        />\r\n      </Route>\r\n      <Route path=\"/saved-cats\">\r\n        <Main\r\n          catCards={catCards}\r\n          savedCatCards={savedCatCards}\r\n          setSavedCat={setSavedCat}\r\n          deleteSavedCat={deleteSavedCat}\r\n          location={location}\r\n        />\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/frontend-challenge\">\r\n      <App />\r\n    </BrowserRouter >\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}